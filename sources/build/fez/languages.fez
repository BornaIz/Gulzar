# We maintain different sets of Latin and Urdu punctuation and numerals,
# and we will use a localization rule to switch between them.
DefineClass @latinpunct = [ exclam.latin hyphen.latin colon.latin semicolon.latin quotedblleft.latin quotedblright.latin parenleft.latin parenright.latin percent.latin dollar.latin degree.latin divide.latin equal.latin plus.latin asterisk.latin quoteleft.latin quoteright.latin endash.latin sterling.latin multiply.latin];
DefineClass @urdupunct = [ exclam.urdu hyphen.urdu colon.urdu semicolon.urdu quotedblleft.urdu quotedblright.urdu parenleft.urdu parenright.urdu percent.urdu dollar.urdu degree.urdu divide.urdu equal.urdu plus.urdu asterisk.urdu quoteleft.urdu quoteright.urdu endash.urdu sterling.urdu multiply.urdu];

# Haha, I bet you thought that localization rules go into the `locl`
# feature, right? But actually that's just a convention. We need to do
# that substitution in the `ccmp` feature because we want it to happen
# before all the other `ccmp` stuff we will be doing in `decomposition.fez`.
Feature ccmp {
   Routine urdu {
        Substitute space -> space.urdu <<arab/dflt arab/URD>>;
        Substitute @latinpunct -> @urdupunct <<arab/dflt arab/URD>>;
   };
   Routine latin {
        Substitute space -> space.latin <<latn/dflt>>;
   };
   Routine numbers {
        Substitute four-ar -> four-ar <<arab/ARA arab/SND arab/FAR>>;
        Substitute ABR_FOUR -> FOUR.urdu <<arab/URD arab/dflt>>;
        Substitute six-persian -> SIX <<arab/URD arab/SND arab/dflt>>;
        Substitute seven-persian -> SEVEN <<arab/URD arab/SND arab/dflt>>;
   };
} ccmp;

# The below is all latin: change lining figures to old-style or tabular,
# and set up latin ligatures.
Feature onum {
        Routine onum { Substitute /\.lf$/ -> /\.osf/; };
};

Feature tnum {
        Routine tnum {
                Substitute /\.lf$/ -> /\.tf/;
                Substitute /\.osf$/ -> /\.tosf/;
        };
};

Feature liga {
Routine latin_liga {
        Substitute f f [b h i j k l] -> [f_f_b f_f_h f_f_i f_f_j f_f_k f_f_l];
        Substitute f [b f h i j k l] -> [f_b f_f f_h fi f_j f_k fl];
        };
};
